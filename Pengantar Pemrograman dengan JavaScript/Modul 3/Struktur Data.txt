Misalkan Anda menerima beberapa data tentang hasil tes siswa dan tugas Anda adalah menulis program yang menghasilkan nilai rata-rata dari semua tes berdasarkan data mentah. Sebelum Anda dapat mengkodekan tugas ini, Anda perlu mempertimbangkan dua masalah terpisah. Pertama, bagaimana Anda mewakili data yang diberikan di aplikasi Anda dan kedua, bagaimana Anda menyebut solusinya? Bahkan sebelum Anda mulai mengkodekan solusi, Anda perlu memikirkan bagaimana Anda akan mewakili data. Dalam video ini, Anda akan belajar tentang beberapa struktur data JavaScript yang paling umum seperti objek, array, peta, dan set. Struktur data adalah cara untuk mengatur data. Misalnya, Anda dapat merepresentasikannya sebagai string. Namun, itu akan menjadi representasi yang agak aneh. Anda harus mengekstrak angka-angka dari string sebelum melakukan perhitungan pada mereka. Atau, Anda dapat merepresentasikannya sebagai beberapa angka, setiap angka disimpan dalam variabel. Melakukannya dengan cara ini Anda tidak perlu mengekstrak dan mengonversi string menjadi angka. Tetapi apakah ini cara paling efisien untuk menyimpan data aplikasi Anda? Mungkin pendekatan lain adalah menyimpan semua nilai dalam array. Cara mengatur data Anda ini bahkan lebih efisien. Ini melibatkan lebih sedikit pengetikan dan kami mengelompokkan data terkait bersama di bawah satu label. Anda mungkin ingat banyak manfaat menggunakan array. Tetapi yang penting di sini adalah bahwa Anda memahami bagaimana Anda meng kodekan solusi untuk tugas tertentu tergantung pada bagaimana Anda menyusun data Anda. Dengan kata lain, solusi untuk tugas pengkodean tergantung pada struktur data yang Anda gunakan. JavaScript agak terbatas dalam jenis struktur data yang tersedia dibandingkan dengan bahasa pemrograman lain, seperti Java atau Python. Namun, beberapa yang paling umum yang akan Anda temui adalah array objek, peta, dan set. Anda mungkin sudah akrab dengan beberapa di antaranya. Mari kita jelajahi masing-masing secara singkat. Sekarang Anda mungkin ingat bahwa sebuah objek adalah kum pulan pasangan nilai kunci yang tidak dapat diubah dan tidak dapat diulang dan Anda menggunakan objek ketika Anda perlu menyimpan dan kemudian mengakses nilai di bawah kunci. Contoh penggunaan struktur data ini adalah ketika Anda perlu menulis kode R00P yang berorientasi objek. Demikian pula, Anda juga dapat mengingat array yang merupakan kum pulan nilai iterable yang teratur. Demikian juga, Anda menggunakan array ketika Anda perlu menyimpan dan kemudian mengakses nilai di bawah indeks. Dan ingat, kami tidak menentukan indeks, JavaScript melakukan ini secara otomatis. Anda hanya menggunakan indeks untuk mengakses nilai spesifik yang disimpan dalam array. Saat bekerja dengan array, biasanya menggunakan loop, seperti loop for untuk mengakses dan mengedit data. Misalnya, untuk menemukan nilai rata-rata untuk tugas sebelumnya, Anda dapat mengulang array dan menghitung jumlah totalnya. Kemudian setelah loop for, hitung rata-rata dengan membagi jumlah dengan panjang array. Struktur data berikutnya adalah peta yang seperti array karena dapat diiterasi. Namun, ini terdiri dari pasangan nilai kunci. Penting untuk tidak membingungkan peta dengan objek. Dengan peta nilai apa pun dapat digunakan sebagai kunci. Dengan objek, kunci hanya bisa berupa string atau simbol. Akhirnya, struktur data terakhir yang saya ingin Anda ketahui adalah satu set. Ini adalah koleksi lain di mana setiap item dalam koleksi harus unik. Misalnya, jika Anda mencoba menambahkan item yang tidak unik ke satu set, operasi ini tidak akan dijalankan. Dengan kata lain, tidak ada kesalahan yang akan dilemparkan dan tidak ada pembaruan yang akan dilakukan untuk satu set. Dalam video ini, Anda belajar tentang beberapa struktur data JavaScript yang paling umum, seperti, objek, array, peta, dan set, mana yang perlu Anda gunakan tergantung pada tugas yang ada. Lain kali Anda memiliki tugas pengkodean, coba pikirkan struktur data yang mungkin Anda gunakan.