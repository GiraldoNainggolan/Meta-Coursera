Anda mungkin sudah tahu, bahwa operator spread dalam JavaScript, digunakan untuk membongkar kotak, misalnya, untuk membongkar array. Operator sisanya, di sisi lain, digunakan untuk membuat kotak yang lebih kecil, dan mengemas item ke dalamnya. Dalam video ini, Anda akan menjelajahi apa itu operator istirahat, dan bagaimana menggunakannya. Untuk mengilustrasikan bagaimana operator istirahat dapat berguna, pertimbangkan rencana perjalanan, saya menyadari, bahwa ada banyak hal yang ingin saya lihat, saat berada di Roma, selama liburan saya. Sayangnya, saya terdesak waktu, dan tidak ada cara untuk benar-benar menikmati semua atraksi, bahkan jika saya terburu-buru melihat semuanya, mari kita jelajahi cara mengatasi masalah rencana perjalanan ini. Dalam hal ini saya dapat membuat serangkaian tujuh tempat yang ingin saya kunjungi, pada liburan saya ke Roma. Jadi saya mengetik const top7 untuk membuat array, dan saya mencantumkan tujuh tempat yang ingin saya kunjungi, dalam tanda kurung persegi, dengan setiap item dalam tanda kutip ganda, dan dipisahkan oleh koma. Colosseum, Forum Romawi, Vatikan, Air Mancur Trevi, Pantheon, Piazza Venezia, dan Bukit Palatine. Untuk mengatasi masalah ini, saya memutuskan untuk mengatur daftar saya sedemikian rupa, sehingga saya memiliki tiga atraksi teratas saya, dan menyiapkan daftar lain, untuk kunjungan kedua. Untuk melakukan ini, saya menggunakan operator rest, dan teknik yang dikenal sebagai de, dalam struktur de ini dalam sintaks, saya cukup menentukan, apa yang ingin saya dapatkan dari tujuh array teratas, dalam hal ini tiga item pertama. Jadi, saya mulai dengan mengetik const, tanda kurung persegi terbuka dan tertutup, tanda sama, top7. Kemudian, saya membuat tiga variabel pertama, kedua dan ketiga, ditambah variabel lain, untuk menyimpan sisa daftar, bernama SecondVisit. Untuk melakukan ini, saya mengetik const pertama, kedua, ketiga, dan kemudian tiga titik, dan variabel baru, secondVisit, dalam tanda kurung persegi, lalu sama dengan top7, semi titik dua. Dengan sintaks ini, saya mengekstrak isi array top7, menjadi empat variabel, variabel pertama, dengan nilai Colosseum. Variabel kedua, dengan nilai Forum Romawi, variabel ketiga, dengan nilai Vatikan. Dan kemudian saya menyertakan variabel secondVisit, yaitu sub array, dari item lainnya, dalam array top7 asli. Jika saya memeriksa SecondVisit, serangkaian empat atraksi yang tersisa, Air Man cur Trevi, Pantheon, Piazza Venezia, dan Bukit Palatine, semuanya disimpan sebagai string primitif. Operator rest, oleh karena itu, memberi kita apa yang tersisa dari array sumber, sebagai sub array terpisah. Operator rest juga berguna dalam fungsi juga, pada kenyataannya, saya dapat menggunakan parameter istirahat, untuk mengalikan nilai dengan cepat. Saya membuat fungsi, untuk menambahkan tarif pajak ke harga, saya beri nama, addTaxToPrices, dan berikan dua parameter, tarif pajak dan operator sisanya, dengan item yang dibeli. Fungsi mengembalikan setiap item dengan tarif pajak, dalam parameter addToTaxPrices, parameter , parameter rest memberi saya array, jadi saya dapat menggunakan metode array, pada item yang dibeli, menggunakan metode peta. Penting untuk diketahui, bahwa parameter rest, harus menjadi parameter terakhir dalam definisi fungsi. Ini berarti, bahwa menambahkan parameter lain, ke fungsi addTaxToPrices saya, setelah operator rest, dan item yang dibeli akan menghasilkan kesalahan. Dalam video ini, Anda belajar cara menggunakan operator rest, yang mengelompokkan parameter yang tersisa dalam daftar, dalam array JavaScript standar, dilakukan dengan baik dengan menyelesaikan video ini, pada operator sisa.