Dalam video ini, saya akan memandu Anda melalui pembuatan dan penggunaan literal template di JavaScript ES6 untuk memahami manfaatnya. Pertama, mari kita meninjau kembali string di JavaScript ES5, yang dibangun menggunakan tanda kutip tunggal atau tanda kutip ganda. Saya memiliki contoh dalam kode saya, saya telah mendeklarasikan variabel, tidak ada multi-baris dengan kata kunci let, yang memegang nilai string, tidak ada string multi-baris di ES5. Pada baris berikut, saya menggunakan metode console.log untuk mengeluarkan string tahukah Anda, diikuti oleh operator plus dan akhirnya variabel no multi-line. Ingatlah bahwa Anda dapat menggunakan operator plus untuk penggabungan. Ketika saya menjalankan kode, saya mendapatkan output yang diharapkan dari tahukah Anda, tidak ada string multi-baris di ES5. Kali ini, mari kita ubah nilai variabel no multi-line. Untuk melakukan ini, saya menempatkan kursor saya setelah kata tidak dan tekan tombol Enter untuk memindahkan bagian dari string ke baris kedua. Ini sekarang mencakup string di beberapa baris. Jika kita menjalankan kode ini sekarang, kita akan mendapatkan kesalahan. Juga, perhatikan bahwa VS Code mencoba memperingatkan kita tentang kesalahan ini dengan menyorot akhir baris 3 dan 4 dengan teks merah dan menampilkan pesan string literal yang tidak diakhiri. Ini pada dasarnya JavaScript yang memberi tahu kita bahwa string baris tunggal kita tidak dikodekan dengan benar dengan simbol kutipan ganda penutup yang diharapkan. Menggunakan metode ES5, Anda hanya dapat membuat string menggunakan kutipan tunggal atau ganda dan menggunakan metode ini tidak mendukung penggunaan string multi-baris. Selanjutnya, izinkan saya menghapus output dan mengganti tab dalam kode saya. Di sini kami memiliki beberapa sintaks yang mungkin asing bagi Anda. Kami memiliki variabel multi-baris yang dideklarasikan dengan kata kunci let dan berisi string. Seperti contoh sebelumnya, string ini didistribusikan di beberapa baris. Namun, alih-alih tanda ku tip, itu terbungkus dalam sepasang backtick. Ini mengubahnya menjadi ekspresi ES6 yang dikenal sebagai template literal. Simbol backtick biasanya terletak di atas tombol tab di sebelah kiri satu tombol pada keyboard Anda. Namun, ada baiknya memeriksa dokumentasi perangkat Anda karena Anda mungkin menggunakan tata letak keyboard yang berbeda. Menggunakan literal template, Anda dapat menambahkan baris sebanyak yang Anda inginkan tanpa menyebabkan kesalahan. Saya dapat mengonfirmasi ini dengan menjalankan kode saya. Perhatikan bahwa output adalah string multi-baris. Tapi tunggu, itu menjadi lebih baik. Kita dapat menggabungkan literal template dengan interpolasi variabel untuk fleksibilitas yang lebih besar. Sekali lagi, izinkan saya menghapus output dan melanjutkan ke tab berikutnya. Di sini, perhatikan saya memiliki dua variabel yang disebut pertama dan kedua, masing-masing berisi string baris tunggal yang ter bungkus dalam backtick. Tapi ada twist di sini. Setiap string juga memiliki segmen yang berada di dalam tanda kutip. Bukankah ini akan menyebabkan konflik, Anda mungkin bertanya-tanya? Untungnya, bukan itu masalahnya. Dengan menggunakan literal template, JavaScript tidak mempertimbangkan tanda kutip, pembatas string, yang berarti mereka hanya karakter biasa di sini. Sekarang saya dapat menggunakan literal template lagi untuk menginterpolasi variabel pertama dan kedua pada baris yang berbeda. Alih-alih menggunakan operator plus untuk penggabungan, saya cukup melampirkan string lengkap yang diinginkan dalam backtick. Saya kemudian dapat menempatkan nama variabel dengan melampirkannya dalam satu set kurung kurung keriting yang didahului oleh simbol dolar. Jika saya menjalankan kode ini, JavaScript menggabungkan semuanya dan mengeluarkan string penuh. Dengan literal template Anda tidak perlu khawatir tentang keterbatasan menggunakan tanda kutip tunggal dan ganda. Ini dapat membuat pengalaman pengkodean yang jauh lebih baik karena Anda hanya perlu menggunakan backtick dan interpolasi variabel. Itu saja untuk video ini. Bagus sekali, Anda belajar cara membangun lalu menerapkan literal template untuk membuat string multiline dan interpolasi variabel di JavaScript.