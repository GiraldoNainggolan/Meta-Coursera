Pada tahun 1886, mobil bertenaga mesin pembakaran internal pertama ditemukan oleh Karl Benz. Segera, ada banyak mobil yang menggunakan mesin pembakaran, pesawat terbang, sepeda motor, dan perahu menyusul tak lama setelahnya. Kecerdikan orang menyebabkan penggunaan mesin pembakaran di tempat-tempat yang mungkin tidak dibayangkan oleh penemu. Hal yang sama terjadi pada JavaScript. Lingkungan JavaScript baru seperti N ode dan npm sekarang tersedia. Beranda JavaScript ada di browser. Itulah lingkungan di mana ia digunakan selama beberapa tahun. Pada dasarnya, itu hanya bahasa front end. Kemudian pada tahun 2009, seorang pengembang bernama Ryan Dao memutuskan untuk menggunakan mesin V8 JavaScript Google dan membuatnya bekerja di server. Tidak selalu mudah menjadi seorang inovator. Banyak yang meragukan apakah itu mungkin. Namun, ide itu tertangkap dan semakin banyak orang mulai bergabung. Beginilah cara Node.js lahir dan bagaimana JavaScript menjadi bahasa untuk front-end dan back-end. Node.js adalah lingkungan mandiri yang terpisah. Ini berarti bahwa Node.js dapat berjalan di beberapa pengaturan. Misalnya, pada baris perintah, di aplikasi desktop, atau di ujung belakang aplikasi web. Sebelum pengenalan Node.js, pengembang harus membangun backend dalam teknologi dan bahasa lain seperti PHP, Python, C-sharp, Ruby, dan Java. Setelah Node.js tersedia, dimungkinkan untuk menggunakan JavaScript di backend atau di sisi server. Ini berarti bahwa hari ini Anda dapat menulis program JavaScript tumpukan penuh. Dengan kata lain, Anda dapat menulis JavaScript di klien dan di server. Node.js dilengkapi dengan manajer paket yang disebut npm, yang merupakan singkatan dari Node Package Manager. Manajer paket memungkinkan Anda untuk menggunakan sejumlah besar per pustakaan dan kerangka kerja sebagai modul Node.js. Modul npm adalah bagian kode mandiri yang telah dipublikasikan di situs web npm. Terkadang modul npm juga disebut sebagai paket npm. Sekarang setelah Anda belajar tentang Node.js, Anda mungkin bertanya-tanya bagaimana Anda dapat menggunakannya secara lokal. Node.js dan npm sudah diinstal sebelumnya di mesin Anda, atau Anda perlu menginstalnya. Setelah diinstal, Anda dapat berinteraksi dengan Node.js dan npm dari baris perintah. Misalnya, Anda dapat menjalankan perintah node di dalam baris perintah komputer Anda. Ini juga disebut shell, atau terminal. Dengan cara yang sama, Anda dapat menjalankan perintah npm. Anda mungkin bertanya-tanya mengapa Anda perlu menjalankan perintah tersebut. Nah, ini karena Anda menggunakan perintah node untuk menjalankan file JavaScript, atau untuk langsung mengeksekusi kode JavaScript. Anda menggunakan perintah npm untuk menginstal modul node apa pun dari repositori npm. Misalnya, Anda dapat menginstal modul bernama huruf kecil. Setelah diinstal, Anda dapat mengimpor modul ini dan menggunakan fungsinya untuk mengubah string menjadi huruf kecil dalam kode Anda. Ketika Anda ingin memulai proyek baru, pertama, buka folder di mesin Anda tempat Anda ingin menempatkan file proyek Anda, lalu jalankan perintah npm. Proyek-@@ proyek ini dapat memiliki bentuk dan ukuran yang berbeda, tetapi semuanya memiliki setidaknya satu kesamaan, file package.json yang dibuat setelah Anda menjalankan perintah npm. File package.json menyimpan semua instruksi pada semua modul node yang ditarik dari repositori npm modul open source. Ada sekitar 11 juta modul di repositori npm. Ini berarti Anda bisa mendapatkan pengkodean pengembang lain senilai ribuan jam dengan menjalankan perintah npm install dan menambahkan nama paket. Contoh pustaka yang dapat Anda instal termasuk React, Webpack, Bootstrap, dan Angular Core. File package.json diperbarui saat Anda menginstal paket baru. Ini melacak semua yang Anda butuhkan untuk menginstal dalam proyek Anda. Ini membuat proyek semacam itu mudah portabel. Misalnya, jika Anda telah membangun proyek dengan sejumlah paket node yang berbeda, semuanya terdaftar di dalam file package.json. Yang perlu Anda lakukan adalah berbagi file ini dengan, misalnya, rekan kerja Anda. Mereka dapat memiliki pengaturan yang sama persis pada mesin mereka hanya dengan menjalankan perintah npm install. Per@@ intah install ini membaca isi package.json dan menginstal semua paket yang diperlukan, juga disebut sebagai dependensi. Terkadang dependensi juga datang dengan dependensinya sendiri. Sering terjadi bahwa ketika Anda menjalankan perintah npm install, beberapa paket node senilai 100 megabyte diinstal ke proyek Anda di bawah folder modul node. Dalam video ini, Anda belajar tentang asal-usul Node.js. Anda juga harus dapat menjelaskan apa itu Node.js dan npm dan bagaimana menggunakan perintah dasar Node dan npm pada baris perintah.