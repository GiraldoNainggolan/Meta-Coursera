sebagai pengembang, Anda ditugaskan untuk menguji perangkat lunak, bagaimana Anda melakukannya dalam beberapa menit ke depan. Saya akan menjelaskan apa itu pengujian perangkat lunak. Saya akan memperkenalkan Anda pada tiga jenis pengujian yang paling banyak digunakan. Anda mungkin mengatakan bahwa menguji perangkat lunak pada tingkat tinggi berarti memastikan bahwa itu berperilaku seperti yang diharapkan dalam setiap proyek pengembangan perangkat lunak modern. Harapan ini dicatat sebagai persyaratan perangkat lunak. Ada banyak aspek pengujian perangkat lunak, tetapi untuk saat ini mari kita anggap itu sebagai tindakan mengkonfirmasi bahwa itu berfungsi seperti yang diuraikan dalam persyaratan perangkat lunak. Sekarang saya memiliki definisi pengujian yang berfungsi, mari kita pikirkan tentang bagaimana Anda dapat mendekatinya untuk desainer UX. Pengujian mungkin berarti memastikan bahwa situs web terlihat dan berperilaku seperti yang diharapkan. Untuk manajer proyek pada pengujian proyek perangkat lunak mungkin berarti bahwa perangkat lunak tertentu bekerja dengan baik dengan bagian lain dari sistem Anda untuk seorang insinyur perangkat lunak. Pengujian mungkin berarti menulis kode yang tidak merusak fungsionalitas yang ada bebas bug dan memenuhi persyaratan sebagaimana ditetapkan dalam tugas tertentu berdasarkan motivasi Anda. Ada beberapa cara untuk menguji proyek perangkat lunak Anda secara praktis. Ini berarti bahwa ada berbagai jenis pengujian. Sekarang, saya akan membahas tiga jenis pengujian berikut dalam pengujian RE ke pengujian integrasi dan pengujian unit. Mari kita mulai dengan menguji contoh nyata dari pengujian E dua EE adalah jika produsen laptop, biarkan karyawannya membuka beberapa laptop di luar jalur perakitan, menyalakannya dan menggunakannya seperti yang dilakukan pengguna normal untuk memastikan bahwa seluruh produk berperilaku sebagaimana mestinya. Lebih spesifik untuk pengembangan web ke. Dalam pengujian mencoba meniru bagaimana pengguna dapat berinteraksi dengan aplikasi Anda. Ini berarti bahwa di Italia pengujian Anda perlu membuka aplikasi web Anda di browser dan kemudian mengujinya dengan berinteraksi dengan halaman dengan cara yang sama pengguna dapat berinteraksi dengannya. Misalnya, mengklik tombol masuk akan melalui proses menambahkan item ke keranjang belanja. Dengan kata lain, Anda menguji seluruh produk perangkat lunak jadi dari perspektif pengguna akhir. Sekarang inilah sesuatu yang mungkin Anda temukan menarik. Orang yang menguji aplikasi tidak harus menjadi pengembang. Akhirnya, tes E dua E adalah yang paling lambat dan membutuhkan waktu paling banyak untuk mengatur dan menjalankan. Berikut adalah beberapa contoh kerangka pengujian makan yang tersedia di pasaran. Driver web Js Protractor dan Siprus. Selanjutnya saya akan membahas pengujian integrasi. Pengujian integrasi menguji bagaimana bagian-bagian sistem Anda berinteraksi dengan bagian lain dari sistem Anda. Dengan kata lain, ini menguji bagaimana bagian-bagian terpisah dari aplikasi Anda bekerja bersama. Mari kita jelajahi dua contoh pengujian integrasi pengujian reaksi perangkat lunak, uji integrasi pustaka dan enzim lebih cepat dan lebih murah daripada tes E dua E tetapi tidak secepat atau semurah pengujian unit. Apa itu pengujian unit. Mari kita lihat. Unit testing adalah proses pengujian unit terkecil dari kode sumber Anda secara terpisah. Contoh yang baik dari ini adalah fungsi. Unit adalah bagian kode terkecil yang dapat Anda uji secara terpisah dari aplikasi lainnya. Praktis unit terkecil dari kode yang dapat diuji dalam Js biasanya merupakan fungsi atau metode. Tes unit bersifat mandiri. Mereka dimaksudkan untuk menguji kode secara terpisah, sebaiknya terpisah dari aplikasi Anda lainnya. Hal ini membuat unit test cepat dijalankan dan mudah ditulis. Jadi Itu adalah ikhtisar singkat dari tiga jenis tes yang berbeda. Bersama-sama, mereka kadang-kadang direpresentasikan sebagai piramida pengujian tiga tingkat. Pertama di dasar Piramida adalah tes unit yang memiliki kecepatan tertinggi dan biaya terendah. Kemudian di tengah piramida adalah tes integrasi kecepatan dan biaya rata-rata. Dan akhirnya di bagian atas piramida adalah tes E dua E, tes paling lambat dan paling mahal untuk dijalankan. Anda sekarang terbiasa dengan tiga cara paling umum yang dapat Anda uji aplikasi Anda