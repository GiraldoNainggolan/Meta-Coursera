Bukankah itu membuat frustrasi ketika Anda bekerja di komputer Anda dan pesan kesalahan muncul di layar dan memaksa Anda untuk menghentikan apa yang Anda lakukan. Ketika bug terjadi, program kami terus berjalan, tetapi berperilaku dengan cara yang tidak kami inginkan. Ketika kesalahan terjadi, program kami berhenti berjalan sebagai akibat dari kesalahan. Dalam video ini, Anda akan belajar tentang bug dan kesalahan dalam JavaScript dan beberapa jenis kesalahan umum, seperti kesalahan sintaks, referensi, dan jenis. Misalkan Anda telah membuat fungsi yang Anda berikan dua angka. Fungsi menambahkan dua angka dan mengeluarkan hasilnya. Selanjutnya, Anda memanggil fungsi dan menambahkan log konsol lain ke baris berikutnya, di mana Anda akan menampilkan string yang masih berjalan. Ketika Anda menjalankan kode, angka 3 akan muncul. Kemudian JavaScript akan dengan senang hati melanjutkan ke baris kode berikutnya dan konsol log string yang masih berjalan. Ini karena kode contoh kami tidak mengandung kesalahan. Ketika fungsi dipanggil, kode dijalankan dan kemudian dipindahkan ke baris berikutnya. Sementara kode ini berfungsi seperti yang diharapkan, bagaimana jika Anda meneruskan ke fungsi beberapa jenis data yang bervariasi, seperti string dan angka? Misalnya, string satu dan nomor dua. Untuk ini, ingat bagaimana penggabungan bekerja. Karena paksaan JavaScript, ketika Anda menambahkan string dan angka menggunakan penggabungan dengan operator plus, nilai-nilai akan digabungkan sebagai string. Jadi, hasilnya adalah string 12. Fungsi kami sekarang tidak lagi menambahkan angka. Sebaliknya, ini menggabungkan string. Namun, JavaScript dengan senang hati terus mengeksekusi kode, mengeluarkan string 12 dan konsol mencatat kata-kata yang masih berjalan. Perhatikan bahwa program kami bekerja tanpa gangguan. Namun, itu tidak berfungsi seperti yang kami maksudkan. Inilah yang disebut sebagai bug, karena membuat kode kita berperilaku tak terduga, tetapi terus bekerja. Bagaimana kesalahan berbeda dari bug? Nah, mari kita jelajahi skenario lain. Misalkan Anda memiliki pemrograman sederhana yang memiliki dua pernyataan. Yang pertama menggunakan log konsol untuk mengeluarkan c plus d, dan yang kedua menggunakan log konsol untuk menampilkan pernyataan, baris ini tidak pernah berjalan. Apa yang pada dua baris kode ini adalah satu-satunya baris kode dalam program kami. Di mana JavaScript akan menemukan nilai variabel c dan d? Yah, itu tidak karena dalam kode sampel, variabel-variabel ini tidak ada. Mereka belum dideklarasikan atau ditugaskan. Ini akan mencari variabel c dan d. karena tidak ada, JavaScript menghasilkan kesalahan referensi. Jenis kesalahan ini terjadi ketika nilai tidak ditentukan, tetapi Anda mencoba menggunakannya dalam kode Anda. Ketika kesalahan terjadi, program kami menghentikan eksekusi kode sebagai konsekuensi langsung. Tidak ada baris kode lebih lanjut yang dieksekusi. Dalam JavaScript dan beberapa bahasa pemrograman lainnya, kami mengatakan bahwa kesalahan dilemparkan. Kesalahan dapat didefinisikan sebagai bagian kode yang salah yang mencegah program dari eksekusi lebih lanjut, kesalahan dilemparkan dan program berhenti. JavaScript melakukan yang terbaik dengan melaporkan kesalahan dengan mengeluarkan pesan kesalahan ke konsol. Pel@@ aporan kesalahan ini berguna karena mempersempit masalah dengan kode kami. Dalam JavaScript, ada banyak jenis kesalahan dan beberapa yang paling umum adalah kesalahan sintaks, kesalahan tipe, dan kesalahan referensi. Anda baru saja belajar tentang kesalahan referensi. Mari kita jelajahi kesalahan sintaks dan kesalahan ketik secara singkat sekarang. Kesalahan sintaks terjadi ketika Anda menulis sepotong kode yang tidak dapat dibaca JavaScript. Misalnya, jika Anda mendeklar asikan variabel dan menetapkannya nilai string, tetapi lupa salah satu simbol kutipan penutup. Atau, misalkan Anda mencoba menjalankan metode array pada angka. Misalnya, metode pop. Dalam contoh ini, kesalahan tipe akan dilaporkan pada kesalahan tipe yang disebut, 5.pop bukan fungsi. Anda sekarang telah belajar tentang bug dan kesalahan dan perbedaan di antara mereka. Anda juga telah belajar tentang beberapa kesalahan umum dan bagaimana JavaScript membantu Anda menangkapnya dengan mengeluarkan pesan kesalahan. Ini adalah fakta bahwa kesalahan pemrograman hampir pasti akan terjadi setiap kali Anda menulis kode. Selanjutnya, Anda akan belajar tentang beberapa alat JavaScript yang berbeda yang digunakan untuk menangkap kesalahan ini.