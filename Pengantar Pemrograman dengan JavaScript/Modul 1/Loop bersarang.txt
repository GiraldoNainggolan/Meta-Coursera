Bagaimana jika Anda membutuhkan kode Anda untuk melakukan lebih dari satu tugas secara bersamaan? Mungkin Anda perlu memproses kumpulan data A, tetapi pada saat yang sama juga memproses kumpulan data B. Dalam kasus seperti ini, Anda dapat menggunakan loop bersarang. Anda mungkin sudah terbiasa dengan loop for, yang digunakan untuk menginstruksikan kode Anda untuk melakukan tugas yang sama berulang-ulang. Tetapi dengan JavaScript, dimungkinkan untuk memasukkan loop ke dalam loop lain sehingga beberapa tugas dapat dilakukan sekaligus. Mungkin ada beberapa tingkat bersarang juga. Sekarang mari kita periksa contoh praktis di mana Anda dapat menggunakan loop bersarang. Misalkan Anda membuat rencana dua minggu untuk hari Senin hingga Jumat, Anda perlu menampilkan setiap nomor hari dan minggu yang terkait dengannya. Anda memiliki lima hari untuk minggu 1 dan lima hari untuk minggu 2. Menggunakan loop bersarang adalah cara sempurna untuk mencapai output ini. Biarkan saya menguraikannya untuk Anda sekarang menggunakan contoh dengan for loop. Jika kita mengingat contoh kita, kita memiliki dua kategori; minggu dan hari. Loop pertama, juga dikenal sebagai loop luar, akan berputar selama beberapa minggu. Diperlukan penghitung kenaikan 2, dan ini dibuat dengan variabel bernama i. Kemudian loop bersarang akan berputar selama beberapa hari. Untuk melakukan ini, penghitung kenaikan lain diperlukan, dan ini dibuat dengan variabel bernama j. Akhirnya, metode log konsol diperlukan untuk menampilkan teks dengan nilai i dan j ke konsol. Kode ini menghasilkan 10 baris, minggu 1, dan setiap hari dari 1-5, dan kemudian sama untuk minggu 2. Namun, Anda harus berhati-hati untuk tidak berlebihan karena beberapa level loop bersarang tidak terlalu berkinerja baik. Dengan kata lain, semakin banyak loop bersarang, semakin lambat kode Anda akan berjalan. Sekarang mari kita jelajahi contoh di mana Anda akan mengeluarkan kode menggunakan loop bersarang untuk menampilkan bulan-bulan musim panas selama dua tahun. Saya kembali ke konsol browser saya dan saya mulai dengan menempelkan deklarasi for loop. Perhatikan ini menentukan variabel tahun sebagai 2023 dan kondisi keluar ketika perbandingan tahun kurang dari 2025 mengembalikan false. Saya juga telah menetapkan nilai tahun untuk meningkat satu pada setiap loop. Pada dasarnya, saya telah mengkodekan loop ini dua kali. Selanjutnya, saya mengetik console.log di badan loop dan menempatkan variabel tahun di dalam tanda kurung. Saya berharap output akan menampilkan 2023 dan 2024. Saya menjalankan loop for untuk mengonfirmasi bahwa ini masalahnya, dan memang, nilai 2023 dan 2024 dicatat ke konsol. Ini adalah proses yang sudah Anda kenal. Sekarang saya ingin mendemonstrasikan loop bersarang, dan untuk melakukan itu, saya perlu menambahkan loop lain di dalam tubuh loop for pertama. Ini juga akan menjadi for loop. Kali ini saya mengetik untuk (var month sama dengan 6, bulan kurang dari 9, dan month plus, plus). Apa yang saya lakukan di sini hanya menghitung bulan-bulan musim panas. Bulan-bulan musim panas biasanya Juni, Juli, dan Agustus di Belahan Bumi Utara. Itu bulan 6, 7, dan 8. Perhatikan bahwa penghitung akan dimulai pada bulan 6 dan akan terus memeriksa apakah angka yang disimpan dalam variabel bulan kurang dari 9. Pada setiap loop berikutnya, nilai yang disimpan dalam multi-variabel akan meningkat sebesar 1. Secara efektif, itu akan melewati bulan 6, 7, dan 8. Setelah menjalankan tiga loop ini, itu akan berhenti. Sekarang saya mengetik console.log di tubuh loop bagian dalam. Untuk memastikan bahwa saya menunjukkan bahwa ini bersarang, saya akan menambahkan beberapa karakter tanda hubung dan kemudian variabel bulan. Sekarang, ketika saya menjalankan kode ini, loop luar akan berjalan untuk pertama kalinya dan itu akan menetapkan nilai variabel tahun ke 2023. Kemudian konsol mencatat nomor itu, lalu masuk ke kode loop dalam dan jalankan. Begitu berada di dalam kode loop dalam, saya dapat mengharapkan kode berjalan tiga kali dan mengeluarkan tanda hubung 6, tanda hubung 7, dan tanda hubung 8. Loop dalam kemudian akan keluar, dan kode akan pindah kembali ke loop luar untuk memulai siklus loop berikutnya. Ketika ini dimulai, nilai variabel tahun telah meningkat satu hingga 2024. Ini masih memenuhi kondisi tahun kurang dari 2025. Kode mencatat tahun dan melanjutkan ke loop dalam. JavaScript akan masuk ke dalam for loop lagi dan menjalankannya kembali. Sekali lagi, itu akan menghasilkan 6, 7, dan 8 lagi. Kode ini akan melanjutkan tampilan urutan ini pada tahun 2024 dan tiga bulan terakhir musim panas. Biarkan aku menjalankan kodenya sekarang. Sukses. Kode menghasilkan output prediksi saya. Sebelum saya mengakhiri video ini, izinkan saya menunjukkan cara menyederhanakan for loop. Alih-alih menggunakan nama variabel panjang ini, saya bisa menggunakan i alih-alih tahun, dan saya dapat menggunakan j alih-alih bulan. Ini membuat kode lebih mudah dibaca. Mungkin tampak lebih sulit untuk dipahami karena saya menggunakan i dan j daripada nama yang lebih deskriptif. Tetapi nama-nama variabel ini adalah praktik standar dalam komunitas pengembangan dan dianggap sebagai praktik terbaik untuk digunakan. Anda sekarang telah belajar tentang loop bersarang dan alasan untuk menggunakannya. Penting untuk diingat bahwa sementara loop bersarang adalah pilihan bagi pengembang, mereka bisa membutuhkan sumber daya yang padat. Loop bersarang dapat digunakan dalam kasus di mana Anda memerlukan pengulangan kode secara otomatis, misalnya, menyortir angka dari tertinggi ke terendah. Pengembang yang baik menulis kode secara efisien untuk memaksimalkan sumber daya, dan Anda sedang dalam perjalanan untuk menjadi salah satunya.