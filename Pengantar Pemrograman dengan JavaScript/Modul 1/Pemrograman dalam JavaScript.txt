Javascript digunakan dalam banyak skenario, misalnya, di browser untuk membantu menambahkan berbagai perilaku dan interaktivitas, seperti menambahkan item ke keranjang belanja ketika Anda mengklik tombol. Di server, dapat digunakan untuk menghidupkan situs web, berkomunikasi dengan database, dan menyediakan bidang asli untuk aplikasi web. Ini digunakan untuk membangun aplikasi seluler menggunakan teknologi seperti React Native dan digunakan untuk mem program perangkat yang dikenal sebagai Internet of Things. Singkatnya, JavaScript ada di mana-mana. Ini berarti bahwa ada banyak kasus penggunaan yang berbeda untuk JavaScript dan dengan kasus penggunaan yang berbeda ini, datang implementasi yang berbeda, masing-masing diarahkan untuk memecahkan masalah tertentu. Misalnya, pada awal 2000-an, perusahaan yang berbeda membangun browser Internet dan disebut sebagai vendor browser. Namun, dengan browser yang berbeda muncul perilaku yang berbeda dengan berbagai perbedaan antara browser lain. Hal ini mengakibatkan pengembang terkadang harus menulis kode JavaScript terpisah untuk browser yang berbeda. Ini bukan penggunaan waktu pengembang terbaik dan dapat menyebabkan pengalaman yang membuat frustrasi bagi pengguna akhir. Dari frustrasi ini, beberapa proyek muncul mencoba memecahkan masalah kompatibilitas ini. Salah satu proyek tersebut berhasil memecahkan masalah ini dan itu adalah perpustakaan bernama jQuery. Menggunakan perpustakaan ini, semua yang dibutuhkan pengembang adalah meng impor jQuery dan menulis kode menggunakan fitur-fiturnya. Kode ini kemudian akan bekerja di semua browser. Pada saat itu, itu seperti sihir, karena itu adalah solusi hebat untuk masalah ketidakcocokan dan jQuery menjadi perpustakaan JavaScript paling populer selama lebih dari satu dekade. Namun, ketika web dan cara kami membuat kode terus berkembang, masalah baru muncul, dan segera, solusi baru untuk masalah tersebut perlu dibangun. Dulu solusi tersebut adalah React, yang keluar pada tahun 2011 dan memiliki efek yang cukup besar pada cara kita berpikir tentang situs web dan bagaimana kita membangunnya. React, memecahkan banyak masalah yang terkait dengan membuat, memperbarui, dan memelihara situs web yang kompleks. Segera, banyak teknologi lain muncul mencoba melakukan hal yang sama. Ini termasuk Knockout, Backbone, Angular, Ember, Vue, Alpine, dan lainnya. Dengan jutaan situs web yang berisi kode JavaScript dari berbagai versi dan perpustakaan, ada banyak kode lama. Ini dikenal sebagai kode warisan. Meskipun Anda mungkin tidak akan menggunakan jQuery untuk membangun situs web modern hari ini, Anda mungkin masih menemukannya dalam proyek yang masih aktif berjalan. Tapi jangan khawatir, terkadang pemula berpikir mereka harus belajar atau bahkan menguasai semua teknologi berbeda yang terkait dengan JavaScript. Namun, itu tidak benar-benar perlu. Untuk menjadi pengembang yang menyeluruh, Anda perlu mempelajari dan menguasai dasar-dasar JavaScript biasa tanpa kerangka kerja. Setelah Anda memiliki dasar ini, jalur akan menjadi lebih mudah bagi Anda untuk mempelajari kerangka kerja yang dibangun di atas JavaScript, seperti React.