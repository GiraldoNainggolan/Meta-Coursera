Dalam JavaScript, seperti dalam bahasa pemrograman lainnya, ada tipe data yang berbeda. Jumlah tipe data adalah bagian dasar dari JavaScript sebagai bahasa pemrograman karena mewakili bilangan bulat dan titik desimal. Tanpanya, Anda tidak akan dapat membuat kode dan dengan tipe data yang begitu penting, sebaiknya kita segera memulai. Biarkan saya menunjukkan tipe data nomor. Saya mengetikkan nilai 123 ke konsol dan tekan “Enter.” Perhatikan bahwa outputnya adalah 123. Selanjutnya, pada baris baru, saya mengetik nilai desimal, 123.456 yang juga merupakan tipe data angka. Saya menekan tombol Enter lagi dan mendapatkan nilai desimal 123.456. Dalam JavaScript, kita dapat menggunakan angka untuk melakukan operasi matematika. Misalnya, saya dapat kode 2 ditambah 2 dan mendapatkan nilai 4 dikembalikan. Sama seperti dalam matematika biasa, kita menggunakan simbol plus untuk penambahan. Demikian pula, gunakan simbol minus untuk melakukan pengurangan. Misalnya, 4 minus 2 mengembalikan nilai 2. Untuk perkalian gunakan tanda bintang atau kunci bintang sehingga 4 kali 4, akan mengembalikan 16. Untuk pembagian gunakan tombol garis miring maju 16 dibagi 4 mengembalikan nilai 4. Anda dapat menggunakan tanda bintang ganda untuk melakukan perhitungan eksponensial untuk aritmatika yang sedikit lebih kompleks. Misalnya, 10 dengan kekuatan 2, 10 kali 10 akan mengembalikan 100. Contoh terakhir adalah sisa atau operator modulus. Ini memeriksa berapa kali Anda dapat memasukkan satu nomor ke yang lain dan kemudian mengembalikan sisanya. Jika saya mengetik 9 modulus 8, nilai satu dikembalikan, atau 16 modulus 8 mengembalikan nol. Ini karena angka delapan dibagi menjadi angka 16 secara merata. Tidak ada sisa seperti yang diwakili di sini oleh nol. Selain operasi matematika dasar, Anda juga dapat menggunakan tanda kurung untuk mengelom pokkan perhitungan yang lebih kompleks. Misalnya, 2 kali 4 ditambah 8 dapat mengembalikan jawaban yang berbeda tergantung pada urutan yang digunakan untuk perhitungan. Misalnya, mengalikan 2 kali 4 dan kemudian menambahkan nilai 8 mengembalikan 16 tetapi 2 kali nilai 4 ditambah 8 mengembalikan 24. Dengan menggunakan tanda kurung, saya dapat mengontrol urutan perhitungan. Tanpa tanda kurung, JavaScript akan mengikuti urutan perhitungan matematis standar. Dalam hal ini, perkalian akan diutamakan dan dilakukan terlebih dahulu sehingga 2 kali 4 terjadi terlebih dahulu dan kemudian 8 ditambahkan mengembalikan nilai 16. Ingat saya dapat mengesampingkannya menggunakan tanda kurung dan mendapatkan hasil yang berbeda. Itulah contoh penggunaan tanda kurung dan JavaScript dengan angka dan operator matematika. Beberapa operator matematika JavaScript yang paling umum adalah plus, minus, times, division, dan modulus. Jika Anda ingin mempelajari lebih lanjut tentang operator matematika, ada bacaan tambahan di akhir pelajaran ini.