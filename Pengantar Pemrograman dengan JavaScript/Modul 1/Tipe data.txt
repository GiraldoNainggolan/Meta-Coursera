Bayangkan sejenak bahwa Anda dihadapkan pada tugas memindahkan semua barang Anda ke tempat baru. Langkah apa yang akan Anda ambil untuk membuat proses lebih efisien? Nah, Anda mungkin mulai dengan menyortir barang dan mengemasnya ke dalam kotak dan kemudian memberi label pada kotak-kotak itu sehingga Anda memiliki gagasan tentang apa yang terkandung di masing-masing kotak. Setelah memindahkannya, Anda meletakkan setiap kotak di ruangan yang dimilikinya untuk membuat pembongkaran lebih cepat dan mudah. Anda juga dapat memikirkan pemrograman dengan cara yang mirip dengan mengemas dan memindahkan kotak. Anda memiliki banyak jenis data yang berbeda yang Anda inginkan tetapi pengkodean secara efisien dimulai dengan mengetahui kapan dan di mana menggunakannya. Dalam video ini Anda belajar mengidentifikasi tipe data primitif dalam JavaScript. Anda akan belajar tentang kasus penggunaan spesifik mereka dan kapan harus menggunakan setiap jenis data. Ada tujuh tipe data primitif dalam JavaScript. Ini adalah string, angka, Boolean, null, undefined, BigInt dan simbol. Mari kita mulai dengan belajar tentang dua yang pertama yaitu string dan angka. Katakanlah Anda sedang membangun aplikasi E-commerce untuk menjual gitar. Ketika pengguna melihat halaman untuk model paling populer, Anda ingin mereka melihat nama gitar, deskripsi, gitar terbaik dan harga 375. Tampaknya cukup sederhana, bukan? Tetapi bagaimana Anda dapat memastikan bahwa informasi yang ditampilkan di layar disimpan secara efektif sehingga aplikasi dapat menggunakannya? Anda akan melakukan ini dengan menggunakan tipe data yang paling tepat tetapi apa arti data sebenarnya? Nah, setiap bagian informasi di aplikasi Anda memiliki nilai yang berbeda dan semua nilai secara kolektif disebut sebagai data tetapi nilainya berbeda dan oleh karena itu perlu disimpan secara berbeda. Misalnya, Anda menyimpan nama dan deskripsi sebagai nilai teks dan harga sebagai nilai numerik. Dalam JavaScript, nilai teks dikenal sebagai tipe data string sedangkan nilai numerik disebut sebagai tipe data angka. Dari perspektif pemrograman, membuat perbedaan antara angka dan teks penting karena mereka mematuhi aturan yang berbeda. Misalnya, untuk membuat angka, Anda cukup mengetikkan nilai numerik tetapi untuk membangun string dalam JavaScript, karakter harus ditutup dalam tanda kutip tunggal atau ganda. Ada juga perbedaan dalam jumlah kombinasi yang dapat disimpan oleh tipe data nomor dan string. Tipe data angka memiliki rentang yang sangat luas di JS yang cukup untuk sebagian besar kasus penggunaan umum. Namun, itu terbatas hingga titik yang ditentukan oleh kemampuan perhitungan JavaScript. Tipe data string praktis memiliki jumlah kombinasi karakter yang tidak terbatas. Ada hampir tak terbatas cara kita dapat menggabungkan karakter yang berbeda menjadi string. Oke, jadi kembali ke contoh aplikasi kami, data harus disimpan menggunakan jenis yang berbeda. Harga akan disimpan sebagai angka sedangkan nama dan deskripsi akan disimpan sebagai string dengan masing-masing dibungkus dalam tanda kutip ganda. Anda sekarang tahu bahwa tipe data string sangat bagus untuk menyimpan nilai seperti judul dan deskripsi sementara tipe data angka lebih cocok untuk harga atau nilai apa pun yang ingin Anda hitung. Namun, ada tipe data tambahan di JavaScript untuk membantu Anda menangani tugas yang berbeda. Selanjutnya mari kita jelajahi masing-masing tipe data yang tersisa dan kasus penggunaan spesifiknya untuk lebih memahami bagaimana Anda dapat memanfaatkannya dengan baik. Mari kita anggap masing-masing sebagai kotak. Seperti yang saya sebutkan sebelumnya, tipe data Boolean hanya memiliki dua nilai, benar dan salah. Ini berarti berguna untuk membuat keputusan. Terkadang perlu diketahui kapan variabel tidak mengandung nilai. Dan JavaScript memiliki dua tipe data untuk mengekspresikan hal itu. Pertama, ada tipe data null yang hanya memiliki nilai null dan mewakili tidak adanya nilai. Anda juga memiliki tipe data yang tidak ditentukan yang hanya dapat menyimpan nilai undefined dan biasanya mengacu pada variabel yang belum diberi nilai. Kemampuan JavaScript telah berkembang dari waktu ke waktu dan versi ES6 memperkenalkan dua tipe data primitif baru untuk membantu tugas yang lebih kompleks. Salah satunya adalah tipe data BigInt yang seperti kotak ekstra besar yang dapat menampung rentang angka yang jauh lebih besar daripada tipe data angka. Terakhir, ada tipe data simbol yang dapat digunakan sebagai pengenal unik. Anggap saja memiliki beberapa kotak dengan label yang sama dan menggunakan nomor seri yang berbeda untuk menghindari mencampurnya. Dalam video ini, Anda telah mempelajari tentang berbagai jenis data yang tersedia di JavaScript. Ingatlah bahwa setiap tipe data memiliki kasus penggunaan tertentu dan mengetahui kapan harus menerapkan masing-masing akan membuat Anda menjadi pembuat kode yang lebih baik, sampai jumpa di lain waktu.